#include <iostream>
using namespace std;

class Node {
public:
    int data;
    Node* next;

    Node(int value) : data(value), next(nullptr) {}
};

void insert(Node*& head, int value) {
    Node* newNode = new Node(value);

    if (head == nullptr) {
        head = newNode;
    } else {
        Node* current = head;
        while (current->next != nullptr) {
            current = current->next;
        }
        current->next = newNode;
    }
}

int findIndex(Node* head, int X) {
    Node* current = head;
    int index = 0;

    while (current != nullptr) {
        if (current->data == X) {
            return index;
        }
        current = current->next;
        index++;
    }

    return -1;
}

int main() {
    int T;
    cin >> T;

    for (int t = 0; t < T; ++t) {
        Node* head = nullptr;

        int value;
        while (true) {
            cin >> value;
            if (value == -1) {
                break;
            }
            insert(head, value);
        }

        int X;
        cin >> X;

        int result = findIndex(head, X);
        cout << result << endl;
    }

    return 0;
}
